name: "zmap CI workflow"


on:
  push:
    branches: [ test ]


jobs:

  ubuntu-latest-job:
    name: "kali-tools-vulnerability ubuntu 20.04"
    runs-on: ubuntu-latest
    env:
      distribution: "kalilinux" #https://hub.docker.com/r/kalilinux/kali-rolling
      version: "latest"
      name: "kali:kali-tools-web"
      dockerfilename: "Dockerfile.kalilinux.kali-tools-web"
    steps:
    - uses: actions/checkout@v2
    - name: "os fingerprinting"
      run: |
        hostnamectl status
        lsb_release -a
        lsb_release -d
        cat /etc/lsb-release
        cat /etc/issue
        cat /etc/os-release
        sudo apt-get install -y neofetch && neofetch   
    - name: "docker build kali linux"
      run: |
        # destroyed afterwards (use --rm )
        # all subsequent Dockerfile commands generate new images and the cache is not used
        sudo docker build --no-cache --rm  -t ${name} . --file dockerfiles/${dockerfilename} 
        docker image ls
        docker image history ${name} 
        docker system df -v               
        docker image inspect ${name}   
        # docker run alpine/nmap-nse-vuln:latest zmap -v -A scanme.nmap.org #OK


           